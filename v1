# bot.py
import os
import discord
from discord.ext import commands
import yfinance as yf
import matplotlib.pyplot as plt
import io
from flask import Flask
from threading import Thread

# -----------------------------
# Keep-alive web server (Replit)
# -----------------------------
app = Flask('')

@app.route('/')
def home():
    return "Bot is running!"

def run():
    app.run(host='0.0.0.0', port=8080)

Thread(target=run).start()

# -----------------------------
# Discord Bot Setup
# -----------------------------
# ----> PUT YOUR TOKEN HERE <----
# Option 1 (safe for Replit): use environment variable
# TOKEN = os.getenv("DISCORD_TOKEN")

# Option 2 (not recommended, only for local testing): put your token directly as a string
TOKEN = MTQyMDg3Njk5MTU1NjQ4NTE5Mg.Gv2EnX.y5HmkAc4hr-xJivAhbJQNXs9AUV8aNUo6eQJl4

intents = discord.Intents.default()
bot = commands.Bot(command_prefix="!", intents=intents)

@bot.event
async def on_ready():
    print(f"✅ Logged in as {bot.user}")

# -----------------------------
# Stock Command
# -----------------------------
@bot.command(name="stock")
async def stock(ctx, ticker: str, period: str = "6mo", interval: str = "1d"):
    try:
        stock = yf.Ticker(ticker)
        hist = stock.history(period=period, interval=interval)

        if hist.empty:
            await ctx.send(f"❌ No data found for `{ticker}`")
            return

        info = stock.info
        name = info.get("longName", ticker)
        price = info.get("currentPrice", hist["Close"].iloc[-1])
        market_cap = info.get("marketCap", "N/A")
        pe_ratio = info.get("trailingPE", "N/A")

        plt.figure(figsize=(8,4))
        plt.plot(hist.index, hist["Close"], label="Close Price", color="blue")
        plt.title(f"{name} ({ticker.upper()}) - {period}")
        plt.xlabel("Date")
        plt.ylabel("Price (USD)")
        plt.legend()
        plt.grid(True)

        buf = io.BytesIO()
        plt.savefig(buf, format="png")
        buf.seek(0)
        plt.close()

        file = discord.File(buf, filename="chart.png")

        embed = discord.Embed(
            title=f"{name} ({ticker.upper()})",
            description=f"**Price:** ${price}\n**Market Cap:** {market_cap}\n**P/E Ratio:** {pe_ratio}",
            color=discord.Color.green()
        )
        embed.set_image(url="attachment://chart.png")

        await ctx.send(embed=embed, file=file)

    except Exception as e:
        await ctx.send(f"⚠️ Error fetching stock `{ticker}`: {str(e)}")

# -----------------------------
# Run Bot
# -----------------------------
bot.run(TOKEN)
